"use client";
import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import AuthenticatedLayout from "@/components/AuthenticatedLayout";

export default function ScanPage() {
  const [user, setUser] = useState(null);
  const [scanning, setScanning] = useState(false);
  const router = useRouter();

  useEffect(() => {
    const userData = localStorage.getItem("stinger_user");
    if (!userData) {
      router.push("/login");
      return;
    }
    setUser(JSON.parse(userData));
  }, [router]);

  const startScan = async () => {
    setScanning(true);
    try {
      // –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–º–µ—Ä–µ
      const stream = await navigator.mediaDevices.getUserMedia({ 
        video: { facingMode: "environment" } 
      });
      
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å QR-—Å–∫–∞–Ω–µ—Ä–æ–º
      setTimeout(() => {
        setScanning(false);
        alert("QR-–∫–æ–¥ –æ—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω! (–¥–µ–º–æ)");
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —Ç–∞—Ä–∏—Ñ–∞ –∏ –æ–ø–ª–∞—Ç–µ
      }, 3000);
      
    } catch (error) {
      setScanning(false);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ");
    }
  };

  if (!user) {
    return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  return (
    <AuthenticatedLayout>
      <div className="flex items-center justify-center px-6 py-20">
        <div className="w-full max-w-md">
          <div className="glass-effect rounded-3xl p-8 shadow-2xl text-center">
            <div className="inline-flex items-center justify-center w-20 h-20 rounded-2xl gradient-bg text-white text-3xl mb-6">
              üì±
            </div>
            
            <h1 className="text-3xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-4">
              –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥
            </h1>
            
            <p className="text-gray-600 dark:text-gray-300 mb-8">
              –ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ QR-–∫–æ–¥ —à–∫–∞—Ñ–∞ –¥–ª—è –∞—Ä–µ–Ω–¥—ã power bank
            </p>

            {!scanning ? (
              <button 
                onClick={startScan}
                className="w-full h-14 rounded-xl bg-gradient-to-r from-purple-600 to-blue-600 text-white font-semibold text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all duration-300"
              >
                üì∑ –û—Ç–∫—Ä—ã—Ç—å –∫–∞–º–µ—Ä—É
              </button>
            ) : (
              <div className="space-y-4">
                <div className="w-full h-64 rounded-xl bg-black/20 flex items-center justify-center">
                  <div className="text-white/70">–ö–∞–º–µ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–∞...</div>
                </div>
                <button 
                  onClick={() => setScanning(false)}
                  className="w-full h-12 rounded-xl bg-red-500 text-white font-semibold hover:bg-red-600 transition-colors"
                >
                  –û—Ç–º–µ–Ω–∏—Ç—å
                </button>
              </div>
            )}

            <div className="mt-6 p-4 rounded-xl bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800">
              <p className="text-sm text-yellow-700 dark:text-yellow-300">
                <strong>üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</strong><br/>
                1. –ù–∞–π–¥–∏—Ç–µ —à–∫–∞—Ñ Stiger<br/>
                2. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥<br/>
                3. –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ<br/>
                4. –ó–∞–±–µ—Ä–∏—Ç–µ power bank –∏–∑ –æ—Ç–∫—Ä—ã–≤—à–µ–≥–æ—Å—è —Å–ª–æ—Ç–∞
              </p>
            </div>
          </div>
        </div>
      </div>
    </AuthenticatedLayout>
  );
}
